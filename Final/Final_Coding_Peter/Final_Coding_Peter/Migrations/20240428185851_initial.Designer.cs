// <auto-generated />
using System;
using Final_Coding_Peter.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Coding_Peter.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20240428185851_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Final_Coding_Peter.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkerID")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("WorkerID");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            Description = "We need to hire 3 new people for our support staff.",
                            DueDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending",
                            Title = "Hire new personnel",
                            WorkerID = 2
                        },
                        new
                        {
                            TaskId = 2,
                            Description = "File Taxes for last year",
                            DueDate = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Past Due",
                            Title = "Finish Taxes",
                            WorkerID = 1
                        },
                        new
                        {
                            TaskId = 3,
                            Description = "Board Meeting needs to be conducted at the end of the Quarter",
                            DueDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Upcoming",
                            Title = "Have a Board Meeting",
                            WorkerID = 3
                        });
                });

            modelBuilder.Entity("Final_Coding_Peter.Models.Worker", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerID"));

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerID");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            WorkerID = 1,
                            Firstname = "Fred",
                            Lastname = "Ballard",
                            Position = "Accountant"
                        },
                        new
                        {
                            WorkerID = 2,
                            Firstname = "Ester",
                            Lastname = "Frederick",
                            Position = "HR"
                        },
                        new
                        {
                            WorkerID = 3,
                            Firstname = "Bruce",
                            Lastname = "Ford",
                            Position = "CEO"
                        });
                });

            modelBuilder.Entity("Final_Coding_Peter.Models.Task", b =>
                {
                    b.HasOne("Final_Coding_Peter.Models.Worker", "Worker")
                        .WithMany("Tasks")
                        .HasForeignKey("WorkerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Final_Coding_Peter.Models.Worker", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
